syntax = "proto3";

package hotel.auth.v1;

option go_package = "github.com/semho/hotel-booking/pkg/proto/auth_v1/auth";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

// Auth service definition
service AuthService {
  // Register creates a new user account
  rpc Register(RegisterRequest) returns (AuthResponse) {
    option (google.api.http) = {
      post: "/api/v1/register"
      body: "*"
    };
  }

  // Login authenticates user and returns tokens
  rpc Login(LoginRequest) returns (AuthResponse) {
    option (google.api.http) = {
      post: "/api/v1/login"
      body: "*"
    };
  }

  // Validate checks if the access token is valid
  rpc Validate(ValidateRequest) returns (ValidateResponse) {
    option (google.api.http) = {
      post: "/api/v1/validate"
      body: "*"
    };
  }

  // Refresh returns new access token using refresh token
  rpc Refresh(RefreshRequest) returns (AuthResponse) {
    option (google.api.http) = {
      post: "/api/v1/refresh"
      body: "*"
    };
  }
}

// User role enumeration
enum UserRole {
  USER_ROLE_UNSPECIFIED = 0;
  USER_ROLE_ADMIN = 1;
  USER_ROLE_USER = 2;
}

// Request for user registration
message RegisterRequest {
  string email = 1;
  string password = 2;
  string first_name = 3;
  string last_name = 4;
  optional string phone = 5;
}

// Request for user login
message LoginRequest {
  string email = 1;
  string password = 2;
}

// Response with authentication tokens
message AuthResponse {
  string access_token = 1;
  string refresh_token = 2;
  google.protobuf.Timestamp access_token_expires_at = 3;
  google.protobuf.Timestamp refresh_token_expires_at = 4;
  UserInfo user = 5;
}

// User information
message UserInfo {
  string id = 1;
  string email = 2;
  string first_name = 3;
  string last_name = 4;
  optional string phone = 5;
  UserRole role = 6;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
}

// Request to validate token
message ValidateRequest {
  string access_token = 1;
}

// Response from token validation
message ValidateResponse {
  bool valid = 1;
  UserInfo user = 2;
}

// Request to refresh token
message RefreshRequest {
  string refresh_token = 1;
}