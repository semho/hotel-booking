// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.28.3
// source: room/room.proto

package room

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Room type enumeration
type RoomType int32

const (
	RoomType_ROOM_TYPE_UNSPECIFIED RoomType = 0
	RoomType_ROOM_TYPE_STANDARD    RoomType = 1
	RoomType_ROOM_TYPE_DELUXE      RoomType = 2
	RoomType_ROOM_TYPE_SUITE       RoomType = 3
)

// Enum value maps for RoomType.
var (
	RoomType_name = map[int32]string{
		0: "ROOM_TYPE_UNSPECIFIED",
		1: "ROOM_TYPE_STANDARD",
		2: "ROOM_TYPE_DELUXE",
		3: "ROOM_TYPE_SUITE",
	}
	RoomType_value = map[string]int32{
		"ROOM_TYPE_UNSPECIFIED": 0,
		"ROOM_TYPE_STANDARD":    1,
		"ROOM_TYPE_DELUXE":      2,
		"ROOM_TYPE_SUITE":       3,
	}
)

func (x RoomType) Enum() *RoomType {
	p := new(RoomType)
	*p = x
	return p
}

func (x RoomType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoomType) Descriptor() protoreflect.EnumDescriptor {
	return file_room_room_proto_enumTypes[0].Descriptor()
}

func (RoomType) Type() protoreflect.EnumType {
	return &file_room_room_proto_enumTypes[0]
}

func (x RoomType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoomType.Descriptor instead.
func (RoomType) EnumDescriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{0}
}

// Room status enumeration
type RoomStatus int32

const (
	RoomStatus_ROOM_STATUS_UNSPECIFIED    RoomStatus = 0
	RoomStatus_ROOM_STATUS_AVAILABLE      RoomStatus = 1 // Готова к заселению
	RoomStatus_ROOM_STATUS_REPAIR         RoomStatus = 2 // Ремонт
	RoomStatus_ROOM_STATUS_MAINTENANCE    RoomStatus = 3 // Уборка
	RoomStatus_ROOM_STATUS_OUT_OF_SERVICE RoomStatus = 4 // Выведена из эксплуатации
)

// Enum value maps for RoomStatus.
var (
	RoomStatus_name = map[int32]string{
		0: "ROOM_STATUS_UNSPECIFIED",
		1: "ROOM_STATUS_AVAILABLE",
		2: "ROOM_STATUS_REPAIR",
		3: "ROOM_STATUS_MAINTENANCE",
		4: "ROOM_STATUS_OUT_OF_SERVICE",
	}
	RoomStatus_value = map[string]int32{
		"ROOM_STATUS_UNSPECIFIED":    0,
		"ROOM_STATUS_AVAILABLE":      1,
		"ROOM_STATUS_REPAIR":         2,
		"ROOM_STATUS_MAINTENANCE":    3,
		"ROOM_STATUS_OUT_OF_SERVICE": 4,
	}
)

func (x RoomStatus) Enum() *RoomStatus {
	p := new(RoomStatus)
	*p = x
	return p
}

func (x RoomStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoomStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_room_room_proto_enumTypes[1].Descriptor()
}

func (RoomStatus) Type() protoreflect.EnumType {
	return &file_room_room_proto_enumTypes[1]
}

func (x RoomStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoomStatus.Descriptor instead.
func (RoomStatus) EnumDescriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{1}
}

// Room representation
type Room struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RoomNumber string     `protobuf:"bytes,2,opt,name=room_number,json=roomNumber,proto3" json:"room_number,omitempty"`
	Type       RoomType   `protobuf:"varint,3,opt,name=type,proto3,enum=hotel.room.v1.RoomType" json:"type,omitempty"`
	Price      string     `protobuf:"bytes,4,opt,name=price,proto3" json:"price,omitempty"`
	Capacity   int32      `protobuf:"varint,5,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Status     RoomStatus `protobuf:"varint,6,opt,name=status,proto3,enum=hotel.room.v1.RoomStatus" json:"status,omitempty"`
	Amenities  []string   `protobuf:"bytes,7,rep,name=amenities,proto3" json:"amenities,omitempty"`
}

func (x *Room) Reset() {
	*x = Room{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Room) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Room) ProtoMessage() {}

func (x *Room) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Room.ProtoReflect.Descriptor instead.
func (*Room) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{0}
}

func (x *Room) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Room) GetRoomNumber() string {
	if x != nil {
		return x.RoomNumber
	}
	return ""
}

func (x *Room) GetType() RoomType {
	if x != nil {
		return x.Type
	}
	return RoomType_ROOM_TYPE_UNSPECIFIED
}

func (x *Room) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *Room) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *Room) GetStatus() RoomStatus {
	if x != nil {
		return x.Status
	}
	return RoomStatus_ROOM_STATUS_UNSPECIFIED
}

func (x *Room) GetAmenities() []string {
	if x != nil {
		return x.Amenities
	}
	return nil
}

// Request for getting available rooms
type GetAvailableRoomsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Capacity *int32      `protobuf:"varint,1,opt,name=capacity,proto3,oneof" json:"capacity,omitempty"`
	Type     *RoomType   `protobuf:"varint,2,opt,name=type,proto3,enum=hotel.room.v1.RoomType,oneof" json:"type,omitempty"`
	Status   *RoomStatus `protobuf:"varint,3,opt,name=status,proto3,enum=hotel.room.v1.RoomStatus,oneof" json:"status,omitempty"`
}

func (x *GetAvailableRoomsRequest) Reset() {
	*x = GetAvailableRoomsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailableRoomsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableRoomsRequest) ProtoMessage() {}

func (x *GetAvailableRoomsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableRoomsRequest.ProtoReflect.Descriptor instead.
func (*GetAvailableRoomsRequest) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{1}
}

func (x *GetAvailableRoomsRequest) GetCapacity() int32 {
	if x != nil && x.Capacity != nil {
		return *x.Capacity
	}
	return 0
}

func (x *GetAvailableRoomsRequest) GetType() RoomType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return RoomType_ROOM_TYPE_UNSPECIFIED
}

func (x *GetAvailableRoomsRequest) GetStatus() RoomStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return RoomStatus_ROOM_STATUS_UNSPECIFIED
}

// Response with available rooms
type GetAvailableRoomsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rooms []*Room `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty"`
}

func (x *GetAvailableRoomsResponse) Reset() {
	*x = GetAvailableRoomsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailableRoomsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableRoomsResponse) ProtoMessage() {}

func (x *GetAvailableRoomsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableRoomsResponse.ProtoReflect.Descriptor instead.
func (*GetAvailableRoomsResponse) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{2}
}

func (x *GetAvailableRoomsResponse) GetRooms() []*Room {
	if x != nil {
		return x.Rooms
	}
	return nil
}

// Request for creating a room
type CreateRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomNumber string     `protobuf:"bytes,1,opt,name=room_number,json=roomNumber,proto3" json:"room_number,omitempty"`      // Номер комнаты
	Type       RoomType   `protobuf:"varint,2,opt,name=type,proto3,enum=hotel.room.v1.RoomType" json:"type,omitempty"`       // Тип комнаты
	Price      string     `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`                                  // Цена комнаты (в формате строки для поддержки DECIMAL)
	Capacity   int32      `protobuf:"varint,4,opt,name=capacity,proto3" json:"capacity,omitempty"`                           // Вместимость
	Status     RoomStatus `protobuf:"varint,5,opt,name=status,proto3,enum=hotel.room.v1.RoomStatus" json:"status,omitempty"` // Статус комнаты
	Amenities  []string   `protobuf:"bytes,6,rep,name=amenities,proto3" json:"amenities,omitempty"`                          // Удобства
}

func (x *CreateRoomRequest) Reset() {
	*x = CreateRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomRequest) ProtoMessage() {}

func (x *CreateRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomRequest.ProtoReflect.Descriptor instead.
func (*CreateRoomRequest) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{3}
}

func (x *CreateRoomRequest) GetRoomNumber() string {
	if x != nil {
		return x.RoomNumber
	}
	return ""
}

func (x *CreateRoomRequest) GetType() RoomType {
	if x != nil {
		return x.Type
	}
	return RoomType_ROOM_TYPE_UNSPECIFIED
}

func (x *CreateRoomRequest) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *CreateRoomRequest) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *CreateRoomRequest) GetStatus() RoomStatus {
	if x != nil {
		return x.Status
	}
	return RoomStatus_ROOM_STATUS_UNSPECIFIED
}

func (x *CreateRoomRequest) GetAmenities() []string {
	if x != nil {
		return x.Amenities
	}
	return nil
}

// Response after creating a room
type CreateRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room *Room `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"` // Созданная комната
}

func (x *CreateRoomResponse) Reset() {
	*x = CreateRoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomResponse) ProtoMessage() {}

func (x *CreateRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomResponse.ProtoReflect.Descriptor instead.
func (*CreateRoomResponse) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{4}
}

func (x *CreateRoomResponse) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

type GetRoomsCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetRoomsCountResponse) Reset() {
	*x = GetRoomsCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomsCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomsCountResponse) ProtoMessage() {}

func (x *GetRoomsCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomsCountResponse.ProtoReflect.Descriptor instead.
func (*GetRoomsCountResponse) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{5}
}

func (x *GetRoomsCountResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Request for getting room by ID
type GetRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Room ID
}

func (x *GetRoomRequest) Reset() {
	*x = GetRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomRequest) ProtoMessage() {}

func (x *GetRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomRequest.ProtoReflect.Descriptor instead.
func (*GetRoomRequest) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{6}
}

func (x *GetRoomRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Response with room information
type GetRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room *Room `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"` // Room data
}

func (x *GetRoomResponse) Reset() {
	*x = GetRoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_room_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomResponse) ProtoMessage() {}

func (x *GetRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_room_room_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomResponse.ProtoReflect.Descriptor instead.
func (*GetRoomResponse) Descriptor() ([]byte, []int) {
	return file_room_room_proto_rawDescGZIP(), []int{7}
}

func (x *GetRoomResponse) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

var File_room_room_proto protoreflect.FileDescriptor

var file_room_room_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0d, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe7,
	0x01, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x6f,
	0x6f, 0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x2e, 0x72,
	0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63,
	0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x2e,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6d,
	0x65, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x6d, 0x65, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0xc6, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x2e, 0x72, 0x6f, 0x6f,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x48, 0x01, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c,
	0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x48, 0x02, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x46, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29,
	0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x68, 0x6f, 0x74, 0x65, 0x6c, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x22, 0xe4, 0x01, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12,
	0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6d, 0x65, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6d, 0x65, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x22, 0x3d, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x2e, 0x72, 0x6f, 0x6f,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x22,
	0x2d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x20,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x3a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x2a, 0x68, 0x0a, 0x08,
	0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x4f, 0x4f, 0x4d,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x41, 0x52, 0x44, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x52,
	0x4f, 0x4f, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x55, 0x58, 0x45, 0x10,
	0x02, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53,
	0x55, 0x49, 0x54, 0x45, 0x10, 0x03, 0x2a, 0x99, 0x01, 0x0a, 0x0a, 0x52, 0x6f, 0x6f, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x16, 0x0a,
	0x12, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x50,
	0x41, 0x49, 0x52, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x4d, 0x41, 0x49, 0x4e, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x43, 0x45,
	0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x4f, 0x46, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45,
	0x10, 0x04, 0x32, 0xe3, 0x04, 0x0a, 0x0b, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x7d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x27, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x2e,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x6f,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6f, 0x6d,
	0x73, 0x12, 0x68, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12,
	0x20, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x22, 0x0d, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x7b, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x2e, 0x68,
	0x6f, 0x74, 0x65, 0x6c, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x2e, 0x72, 0x6f,
	0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6f,
	0x6d, 0x73, 0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x64, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x6f, 0x6d, 0x12, 0x1d, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x2e, 0x72, 0x6f, 0x6f, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x87,
	0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x46, 0x69, 0x72, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x27, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c,
	0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x2f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x2d, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x65, 0x6d, 0x68, 0x6f, 0x2f, 0x68, 0x6f, 0x74,
	0x65, 0x6c, 0x2d, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6f,
	0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_room_room_proto_rawDescOnce sync.Once
	file_room_room_proto_rawDescData = file_room_room_proto_rawDesc
)

func file_room_room_proto_rawDescGZIP() []byte {
	file_room_room_proto_rawDescOnce.Do(func() {
		file_room_room_proto_rawDescData = protoimpl.X.CompressGZIP(file_room_room_proto_rawDescData)
	})
	return file_room_room_proto_rawDescData
}

var file_room_room_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_room_room_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_room_room_proto_goTypes = []interface{}{
	(RoomType)(0),                     // 0: hotel.room.v1.RoomType
	(RoomStatus)(0),                   // 1: hotel.room.v1.RoomStatus
	(*Room)(nil),                      // 2: hotel.room.v1.Room
	(*GetAvailableRoomsRequest)(nil),  // 3: hotel.room.v1.GetAvailableRoomsRequest
	(*GetAvailableRoomsResponse)(nil), // 4: hotel.room.v1.GetAvailableRoomsResponse
	(*CreateRoomRequest)(nil),         // 5: hotel.room.v1.CreateRoomRequest
	(*CreateRoomResponse)(nil),        // 6: hotel.room.v1.CreateRoomResponse
	(*GetRoomsCountResponse)(nil),     // 7: hotel.room.v1.GetRoomsCountResponse
	(*GetRoomRequest)(nil),            // 8: hotel.room.v1.GetRoomRequest
	(*GetRoomResponse)(nil),           // 9: hotel.room.v1.GetRoomResponse
}
var file_room_room_proto_depIdxs = []int32{
	0,  // 0: hotel.room.v1.Room.type:type_name -> hotel.room.v1.RoomType
	1,  // 1: hotel.room.v1.Room.status:type_name -> hotel.room.v1.RoomStatus
	0,  // 2: hotel.room.v1.GetAvailableRoomsRequest.type:type_name -> hotel.room.v1.RoomType
	1,  // 3: hotel.room.v1.GetAvailableRoomsRequest.status:type_name -> hotel.room.v1.RoomStatus
	2,  // 4: hotel.room.v1.GetAvailableRoomsResponse.rooms:type_name -> hotel.room.v1.Room
	0,  // 5: hotel.room.v1.CreateRoomRequest.type:type_name -> hotel.room.v1.RoomType
	1,  // 6: hotel.room.v1.CreateRoomRequest.status:type_name -> hotel.room.v1.RoomStatus
	2,  // 7: hotel.room.v1.CreateRoomResponse.room:type_name -> hotel.room.v1.Room
	2,  // 8: hotel.room.v1.GetRoomResponse.room:type_name -> hotel.room.v1.Room
	3,  // 9: hotel.room.v1.RoomService.GetAvailableRooms:input_type -> hotel.room.v1.GetAvailableRoomsRequest
	5,  // 10: hotel.room.v1.RoomService.CreateRoom:input_type -> hotel.room.v1.CreateRoomRequest
	3,  // 11: hotel.room.v1.RoomService.GetRoomsCount:input_type -> hotel.room.v1.GetAvailableRoomsRequest
	8,  // 12: hotel.room.v1.RoomService.GetRoom:input_type -> hotel.room.v1.GetRoomRequest
	3,  // 13: hotel.room.v1.RoomService.GetFirstAvailableRoom:input_type -> hotel.room.v1.GetAvailableRoomsRequest
	4,  // 14: hotel.room.v1.RoomService.GetAvailableRooms:output_type -> hotel.room.v1.GetAvailableRoomsResponse
	6,  // 15: hotel.room.v1.RoomService.CreateRoom:output_type -> hotel.room.v1.CreateRoomResponse
	7,  // 16: hotel.room.v1.RoomService.GetRoomsCount:output_type -> hotel.room.v1.GetRoomsCountResponse
	9,  // 17: hotel.room.v1.RoomService.GetRoom:output_type -> hotel.room.v1.GetRoomResponse
	9,  // 18: hotel.room.v1.RoomService.GetFirstAvailableRoom:output_type -> hotel.room.v1.GetRoomResponse
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_room_room_proto_init() }
func file_room_room_proto_init() {
	if File_room_room_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_room_room_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Room); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailableRoomsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailableRoomsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomsCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_room_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_room_room_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_room_room_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_room_room_proto_goTypes,
		DependencyIndexes: file_room_room_proto_depIdxs,
		EnumInfos:         file_room_room_proto_enumTypes,
		MessageInfos:      file_room_room_proto_msgTypes,
	}.Build()
	File_room_room_proto = out.File
	file_room_room_proto_rawDesc = nil
	file_room_room_proto_goTypes = nil
	file_room_room_proto_depIdxs = nil
}
